//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-33567101
// Cuda compilation tools, release 12.3, V12.3.107
// Based on NVVM 7.0.1
//

.version 8.3
.target sm_86
.address_size 64

	// .globl	init_program
.extern .func  (.param .b32 func_retval0) _odd
(
	.param .b64 _odd_param_0,
	.param .b64 _odd_param_1,
	.param .b64 _odd_param_2
)
;
.extern .func  (.param .b32 func_retval0) _even
(
	.param .b64 _even_param_0,
	.param .b64 _even_param_1,
	.param .b64 _even_param_2
)
;
.extern .func  (.param .b32 func_retval0) _initialize
(
	.param .b64 _initialize_param_0,
	.param .b64 _initialize_param_1
)
;
.extern .func  (.param .b32 func_retval0) _make_work
(
	.param .b64 _make_work_param_0,
	.param .b64 _make_work_param_1
)
;
.extern .func  (.param .b32 func_retval0) _finalize
(
	.param .b64 _finalize_param_0,
	.param .b64 _finalize_param_1
)
;
.weak .shared .align 1 .b8 _ZZ15_inner_dev_initI12EventProgramI6collazEEvRNT_13DeviceContextERNS3_11DeviceStateEE8_grp_ctx[1];
.weak .shared .align 8 .u64 _ZZ15_inner_dev_initI12EventProgramI6collazEEvRNT_13DeviceContextERNS3_11DeviceStateEE5group;
.weak .shared .align 8 .b8 _ZZN12EventProgramI6collazE4execEjE10group_work[16];
.weak .shared .align 1 .u8 _ZZN12EventProgramI6collazE4execEjE4done;
.weak .shared .align 4 .u32 _ZZN12EventProgramI6collazE4execEjE7func_id;
.weak .shared .align 1 .u8 _ZZN12EventProgramI6collazE4execEjE16should_make_work;
.weak .shared .align 1 .b8 _ZZ15_inner_dev_execI12EventProgramI6collazEEvRNT_13DeviceContextERNS3_11DeviceStateEmE8_grp_ctx[1];
.weak .shared .align 8 .u64 _ZZ15_inner_dev_execI12EventProgramI6collazEEvRNT_13DeviceContextERNS3_11DeviceStateEmE5group;

.visible .func  (.param .b32 func_retval0) init_program(
	.param .b64 init_program_param_0,
	.param .b64 init_program_param_1,
	.param .b64 init_program_param_2
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 0;
	st.param.b32 	[func_retval0+0], %r1;
	ret;

}
	// .globl	exec_program
.visible .func  (.param .b32 func_retval0) exec_program(
	.param .b64 exec_program_param_0,
	.param .b64 exec_program_param_1,
	.param .b64 exec_program_param_2,
	.param .b64 exec_program_param_3
)
{
	.local .align 8 .b8 	__local_depot1[104];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<27>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<109>;
	.reg .b64 	%rd<96>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd28, [exec_program_param_1];
	ld.param.u64 	%rd30, [exec_program_param_2];
	ld.param.u64 	%rd29, [exec_program_param_3];
	add.u64 	%rd31, %SP, 0;
	add.u64 	%rd32, %SPL, 0;
	add.u64 	%rd33, %SP, 48;
	add.u64 	%rd34, %SPL, 48;
	add.u64 	%rd35, %SP, 76;
	add.u64 	%rd36, %SPL, 76;
	add.u64 	%rd37, %SP, 88;
	add.u64 	%rd38, %SPL, 88;
	st.local.u64 	[%rd38], %rd30;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r30, %ctaid.x;
	mov.u32 	%r2, %tid.x;
	mad.lo.s32 	%r31, %r30, %r1, %r2;
	st.local.u32 	[%rd36], %r31;
	st.local.u32 	[%rd36+4], %r31;
	st.local.u64 	[%rd32], %rd28;
	mov.u32 	%r32, _ZZ15_inner_dev_execI12EventProgramI6collazEEvRNT_13DeviceContextERNS3_11DeviceStateEmE8_grp_ctx;
	{ .reg .b64 %tmp;
	  cvt.u64.u32 	%tmp, %r32;
	  cvta.shared.u64 	%rd39, %tmp; }
	st.local.u64 	[%rd32+8], %rd39;
	st.local.u64 	[%rd32+16], %rd35;
	st.local.u64 	[%rd32+24], %rd37;
	mov.u32 	%r33, _ZZ15_inner_dev_execI12EventProgramI6collazEEvRNT_13DeviceContextERNS3_11DeviceStateEmE5group;
	{ .reg .b64 %tmp;
	  cvt.u64.u32 	%tmp, %r33;
	  cvta.shared.u64 	%rd40, %tmp; }
	st.local.u64 	[%rd32+32], %rd40;
	add.u64 	%rd41, %SP, 96;
	st.local.u64 	[%rd32+40], %rd41;
	mov.u32 	%r99, 0;
	st.local.u32 	[%rd34], %r99;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd33;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd31;
	.param .b32 retval0;
	call.uni (retval0), 
	_initialize, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r35, [retval0+0];
	} // callseq 0
	bar.sync 	0;
	// begin inline asm
	activemask.b32 %r28;
	// end inline asm
	bar.sync 	0;
	bar.sync 	0;
	// begin inline asm
	activemask.b32 %r29;
	// end inline asm
	brev.b32 	%r36, %r29;
	bfind.shiftamt.u32 	%r37, %r36;
	setp.ne.s32 	%p2, %r37, %r2;
	@%p2 bra 	$L__BB1_2;

	mov.u64 	%rd42, 0;
	st.shared.u64 	[_ZZN12EventProgramI6collazE4execEjE10group_work], %rd42;
	mov.u32 	%r38, 0;
	st.shared.v2.u32 	[_ZZN12EventProgramI6collazE4execEjE10group_work+8], {%r38, %r38};

$L__BB1_2:
	cvt.u32.u64 	%r40, %rd29;
	bar.sync 	0;
	shl.b32 	%r3, %r40, 5;
	mul.lo.s32 	%r4, %r1, %r40;
	add.u64 	%rd47, %SP, 72;
	add.u64 	%rd5, %SPL, 72;

$L__BB1_3:
	bar.sync 	0;
	// begin inline asm
	activemask.b32 %r41;
	// end inline asm
	brev.b32 	%r42, %r41;
	bfind.shiftamt.u32 	%r43, %r42;
	setp.ne.s32 	%p3, %r43, %r2;
	@%p3 bra 	$L__BB1_12;

	mov.u32 	%r102, 0;
	mov.u16 	%rs3, 1;
	st.shared.u8 	[_ZZN12EventProgramI6collazE4execEjE4done], %rs3;
	ld.u64 	%rd94, [%rd28+16];
	add.s64 	%rd93, %rd94, 28;
	ld.u32 	%r103, [%rd94+32];
	ld.u32 	%r100, [%rd94+28];
	setp.lt.u32 	%p4, %r100, %r103;
	@%p4 bra 	$L__BB1_6;

	ld.u64 	%rd94, [%rd28+24];
	add.s64 	%rd93, %rd94, 28;
	ld.u32 	%r103, [%rd94+32];
	ld.u32 	%r100, [%rd94+28];
	setp.ge.u32 	%p5, %r100, %r103;
	mov.u32 	%r102, 1;
	@%p5 bra 	$L__BB1_12;

$L__BB1_6:
	mov.u16 	%rs4, 0;
	st.shared.u8 	[_ZZN12EventProgramI6collazE4execEjE4done], %rs4;
	st.shared.u32 	[_ZZN12EventProgramI6collazE4execEjE7func_id], %r102;
	setp.gt.u32 	%p6, %r100, %r103;
	mov.u32 	%r104, %r103;
	@%p6 bra 	$L__BB1_8;

	atom.add.u32 	%r46, [%rd93], %r3;
	add.s32 	%r47, %r46, %r3;
	min.u32 	%r13, %r46, %r103;
	min.u32 	%r104, %r47, %r103;
	mov.u32 	%r103, %r13;

$L__BB1_8:
	ld.u8 	%rs5, [%rd94];
	setp.eq.s16 	%p7, %rs5, 0;
	@%p7 bra 	$L__BB1_10;

	ld.u64 	%rd95, [%rd94+16];
	bra.uni 	$L__BB1_11;

$L__BB1_10:
	ld.u64 	%rd95, [%rd94+8];

$L__BB1_11:
	st.shared.u64 	[_ZZN12EventProgramI6collazE4execEjE10group_work], %rd95;
	st.shared.v2.u32 	[_ZZN12EventProgramI6collazE4execEjE10group_work+8], {%r103, %r104};

$L__BB1_12:
	bar.sync 	0;
	ld.shared.u8 	%rs6, [_ZZN12EventProgramI6collazE4execEjE4done];
	setp.eq.s16 	%p8, %rs6, 0;
	@%p8 bra 	$L__BB1_24;
	bra.uni 	$L__BB1_13;

$L__BB1_24:
	ld.shared.u64 	%rd24, [_ZZN12EventProgramI6collazE4execEjE10group_work];
	mov.u32 	%r108, 0;
	ld.shared.v2.u32 	{%r63, %r64}, [_ZZN12EventProgramI6collazE4execEjE10group_work+8];
	setp.ge.u32 	%p16, %r63, %r64;
	mov.u32 	%r106, %r108;
	@%p16 bra 	$L__BB1_28;

	bar.sync 	0;
	// begin inline asm
	activemask.b32 %r65;
	// end inline asm
	brev.b32 	%r66, %r65;
	bfind.shiftamt.u32 	%r67, %r66;
	setp.ne.s32 	%p17, %r67, %r2;
	@%p17 bra 	$L__BB1_27;

	ld.shared.u32 	%r68, [_ZZN12EventProgramI6collazE4execEjE10group_work+8];
	add.s32 	%r69, %r68, %r4;
	st.shared.u32 	[_ZZN12EventProgramI6collazE4execEjE10group_work+8], %r69;

$L__BB1_27:
	add.s32 	%r70, %r63, %r2;
	add.s32 	%r71, %r70, %r4;
	bar.sync 	0;
	min.u32 	%r106, %r71, %r64;
	min.u32 	%r108, %r70, %r64;

$L__BB1_28:
	setp.lt.u32 	%p1, %r108, %r106;
	setp.ge.u32 	%p18, %r108, %r106;
	@%p18 bra 	$L__BB1_35;

	selp.b32 	%r72, %r1, 0, %p1;
	add.s32 	%r107, %r72, %r108;

$L__BB1_30:
	mov.u32 	%r25, %r108;
	mov.u32 	%r108, %r107;
	mul.wide.u32 	%rd64, %r25, 40;
	add.s64 	%rd65, %rd24, %rd64;
	ld.u64 	%rd25, [%rd65+8];
	ld.u64 	%rd26, [%rd65+16];
	ld.u64 	%rd27, [%rd65+24];
	ld.shared.u32 	%r73, [_ZZN12EventProgramI6collazE4execEjE7func_id];
	setp.eq.s32 	%p19, %r73, 0;
	@%p19 bra 	$L__BB1_33;

	setp.ne.s32 	%p20, %r73, 1;
	@%p20 bra 	$L__BB1_34;

	st.local.u64 	[%rd32], %rd28;
	st.local.u64 	[%rd32+8], %rd39;
	st.local.u64 	[%rd32+16], %rd35;
	st.local.u64 	[%rd32+24], %rd37;
	st.local.u64 	[%rd32+32], %rd40;
	st.local.u64 	[%rd32+40], %rd41;
	st.local.u64 	[%rd34], %rd25;
	st.local.u64 	[%rd34+8], %rd26;
	st.local.u64 	[%rd34+16], %rd27;
	mov.u32 	%r76, 0;
	st.local.u32 	[%rd5], %r76;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd47;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd31;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd33;
	.param .b32 retval0;
	call.uni (retval0), 
	_even, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b32 	%r77, [retval0+0];
	} // callseq 2
	bra.uni 	$L__BB1_34;

$L__BB1_33:
	st.local.u64 	[%rd32], %rd28;
	st.local.u64 	[%rd32+8], %rd39;
	st.local.u64 	[%rd32+16], %rd35;
	st.local.u64 	[%rd32+24], %rd37;
	st.local.u64 	[%rd32+32], %rd40;
	st.local.u64 	[%rd32+40], %rd41;
	st.local.u64 	[%rd34], %rd25;
	st.local.u64 	[%rd34+8], %rd26;
	st.local.u64 	[%rd34+16], %rd27;
	mov.u32 	%r80, 0;
	st.local.u32 	[%rd5], %r80;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd47;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd31;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd33;
	.param .b32 retval0;
	call.uni (retval0), 
	_odd, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b32 	%r81, [retval0+0];
	} // callseq 3

$L__BB1_34:
	setp.lt.u32 	%p21, %r108, %r106;
	selp.b32 	%r82, %r1, 0, %p21;
	add.s32 	%r107, %r82, %r108;
	@%p21 bra 	$L__BB1_30;

$L__BB1_35:
	setp.lt.u32 	%p22, %r99, 1048575;
	add.s32 	%r99, %r99, 1;
	@%p22 bra 	$L__BB1_3;
	bra.uni 	$L__BB1_36;

$L__BB1_13:
	// begin inline asm
	activemask.b32 %r48;
	// end inline asm
	brev.b32 	%r49, %r48;
	bfind.shiftamt.u32 	%r50, %r49;
	setp.ne.s32 	%p9, %r50, %r2;
	@%p9 bra 	$L__BB1_15;

	mov.u16 	%rs7, 1;
	st.shared.u8 	[_ZZN12EventProgramI6collazE4execEjE16should_make_work], %rs7;

$L__BB1_15:
	bar.sync 	0;
	ld.shared.u8 	%rs8, [_ZZN12EventProgramI6collazE4execEjE16should_make_work];
	setp.eq.s16 	%p10, %rs8, 0;
	@%p10 bra 	$L__BB1_36;

$L__BB1_16:
	// begin inline asm
	activemask.b32 %r51;
	// end inline asm
	brev.b32 	%r52, %r51;
	bfind.shiftamt.u32 	%r53, %r52;
	setp.ne.s32 	%p11, %r53, %r2;
	@%p11 bra 	$L__BB1_21;

	ld.u64 	%rd53, [%rd28+16];
	add.s64 	%rd54, %rd53, 36;
	atom.add.u32 	%r54, [%rd54], 0;
	ld.u32 	%r55, [%rd28+8];
	setp.lt.u32 	%p12, %r54, %r55;
	@%p12 bra 	$L__BB1_19;

	mov.u16 	%rs9, 0;
	st.shared.u8 	[_ZZN12EventProgramI6collazE4execEjE16should_make_work], %rs9;

$L__BB1_19:
	ld.u64 	%rd55, [%rd28+24];
	add.s64 	%rd56, %rd55, 36;
	atom.add.u32 	%r56, [%rd56], 0;
	ld.u32 	%r57, [%rd28+8];
	setp.lt.u32 	%p13, %r56, %r57;
	@%p13 bra 	$L__BB1_21;

	mov.u16 	%rs10, 0;
	st.shared.u8 	[_ZZN12EventProgramI6collazE4execEjE16should_make_work], %rs10;

$L__BB1_21:
	ld.shared.u8 	%rs12, [_ZZN12EventProgramI6collazE4execEjE16should_make_work];
	setp.eq.s16 	%p14, %rs12, 0;
	mov.u16 	%rs18, 0;
	@%p14 bra 	$L__BB1_23;

	st.local.u64 	[%rd32], %rd28;
	st.local.u64 	[%rd32+8], %rd39;
	st.local.u64 	[%rd32+16], %rd35;
	st.local.u64 	[%rd32+24], %rd37;
	st.local.u64 	[%rd32+32], %rd40;
	st.local.u64 	[%rd32+40], %rd41;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd33;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd31;
	.param .b32 retval0;
	call.uni (retval0), 
	_make_work, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r60, [retval0+0];
	} // callseq 1
	ld.local.u8 	%rs18, [%rd34];
	st.shared.u8 	[_ZZN12EventProgramI6collazE4execEjE16should_make_work], %rs18;

$L__BB1_23:
	and.b16  	%rs13, %rs18, 255;
	setp.eq.s16 	%p15, %rs13, 0;
	@%p15 bra 	$L__BB1_36;
	bra.uni 	$L__BB1_16;

$L__BB1_36:
	bar.sync 	0;
	st.local.u64 	[%rd32], %rd28;
	st.local.u64 	[%rd32+8], %rd39;
	st.local.u64 	[%rd32+16], %rd35;
	st.local.u64 	[%rd32+24], %rd37;
	st.local.u64 	[%rd32+32], %rd40;
	st.local.u64 	[%rd32+40], %rd41;
	mov.u32 	%r85, 0;
	st.local.u32 	[%rd34], %r85;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd33;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd31;
	.param .b32 retval0;
	call.uni (retval0), 
	_finalize, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r86, [retval0+0];
	} // callseq 4
	membar.gl;
	bar.sync 	0;
	setp.ne.s32 	%p23, %r2, 0;
	@%p23 bra 	$L__BB1_39;

	ld.u64 	%rd89, [%rd28];
	atom.add.u32 	%r87, [%rd89], 1;
	mov.u32 	%r88, %nctaid.x;
	add.s32 	%r89, %r88, -1;
	setp.ne.s32 	%p24, %r87, %r89;
	@%p24 bra 	$L__BB1_39;

	ld.u64 	%rd90, [%rd28];
	mov.u32 	%r90, 0;
	atom.exch.b32 	%r91, [%rd90], 0;
	ld.u64 	%rd91, [%rd28+16];
	ld.u8 	%rs14, [%rd91];
	setp.eq.s16 	%p25, %rs14, 0;
	selp.u16 	%rs15, 1, 0, %p25;
	st.u8 	[%rd91], %rs15;
	ld.u32 	%r92, [%rd91+24];
	ld.u32 	%r93, [%rd91+36];
	min.u32 	%r94, %r93, %r92;
	st.u32 	[%rd91+28], %r90;
	st.u32 	[%rd91+32], %r94;
	st.u32 	[%rd91+36], %r90;
	st.u32 	[%rd91+40], %r92;
	ld.u64 	%rd92, [%rd28+24];
	ld.u8 	%rs16, [%rd92];
	setp.eq.s16 	%p26, %rs16, 0;
	selp.u16 	%rs17, 1, 0, %p26;
	st.u8 	[%rd92], %rs17;
	ld.u32 	%r95, [%rd92+24];
	ld.u32 	%r96, [%rd92+36];
	min.u32 	%r97, %r96, %r95;
	st.u32 	[%rd92+28], %r90;
	st.u32 	[%rd92+32], %r97;
	st.u32 	[%rd92+36], %r90;
	st.u32 	[%rd92+40], %r95;

$L__BB1_39:
	st.param.b32 	[func_retval0+0], %r85;
	ret;

}
	// .globl	dispatch_odd_async
.visible .func  (.param .b32 func_retval0) dispatch_odd_async(
	.param .b64 dispatch_odd_async_param_0,
	.param .b64 dispatch_odd_async_param_1,
	.param .b64 dispatch_odd_async_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd1, [dispatch_odd_async_param_1];
	ld.param.u64 	%rd10, [dispatch_odd_async_param_2];
	ld.u64 	%rd11, [%rd1];
	ld.u64 	%rd2, [%rd11+16];
	ld.u32 	%r1, [%rd2+40];
	ld.u32 	%r3, [%rd2+36];
	setp.ge.u32 	%p1, %r3, %r1;
	@%p1 bra 	$L__BB2_6;

	ld.u64 	%rd3, [%rd10];
	ld.u64 	%rd4, [%rd10+8];
	ld.u64 	%rd5, [%rd10+16];
	add.s64 	%rd12, %rd2, 36;
	atom.add.u32 	%r4, [%rd12], 1;
	setp.ge.u32 	%p2, %r4, %r1;
	setp.lt.u32 	%p3, %r4, %r1;
	selp.b32 	%r2, %r4, 0, %p3;
	@%p2 bra 	$L__BB2_6;

	ld.u64 	%rd13, [%rd1];
	ld.u64 	%rd6, [%rd13+16];
	ld.u8 	%rs1, [%rd6];
	setp.eq.s16 	%p4, %rs1, 0;
	@%p4 bra 	$L__BB2_4;

	ld.u64 	%rd16, [%rd6+8];
	bra.uni 	$L__BB2_5;

$L__BB2_4:
	ld.u64 	%rd16, [%rd6+16];

$L__BB2_5:
	mul.wide.u32 	%rd14, %r2, 40;
	add.s64 	%rd15, %rd16, %rd14;
	st.u64 	[%rd15+8], %rd3;
	st.u64 	[%rd15+16], %rd4;
	st.u64 	[%rd15+24], %rd5;

$L__BB2_6:
	mov.u32 	%r5, 0;
	st.param.b32 	[func_retval0+0], %r5;
	ret;

}
	// .globl	dispatch_odd_sync
.visible .func  (.param .b32 func_retval0) dispatch_odd_sync(
	.param .b64 dispatch_odd_sync_param_0,
	.param .b64 dispatch_odd_sync_param_1,
	.param .b64 dispatch_odd_sync_param_2
)
{
	.local .align 8 .b8 	__local_depot3[80];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<18>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd1, [dispatch_odd_sync_param_1];
	ld.param.u64 	%rd2, [dispatch_odd_sync_param_2];
	add.u64 	%rd3, %SP, 0;
	add.u64 	%rd4, %SPL, 0;
	add.u64 	%rd5, %SP, 48;
	add.u64 	%rd6, %SPL, 48;
	add.u64 	%rd7, %SP, 72;
	add.u64 	%rd8, %SPL, 72;
	ld.u64 	%rd9, [%rd2];
	ld.u64 	%rd10, [%rd2+8];
	ld.u64 	%rd11, [%rd2+16];
	ld.u64 	%rd12, [%rd1];
	ld.u64 	%rd13, [%rd1+8];
	ld.u64 	%rd14, [%rd1+16];
	ld.u64 	%rd15, [%rd1+24];
	ld.u64 	%rd16, [%rd1+32];
	ld.u64 	%rd17, [%rd1+40];
	st.local.u64 	[%rd4], %rd12;
	st.local.u64 	[%rd4+8], %rd13;
	st.local.u64 	[%rd4+16], %rd14;
	st.local.u64 	[%rd4+24], %rd15;
	st.local.u64 	[%rd4+32], %rd16;
	st.local.u64 	[%rd4+40], %rd17;
	st.local.u64 	[%rd6], %rd9;
	st.local.u64 	[%rd6+8], %rd10;
	st.local.u64 	[%rd6+16], %rd11;
	mov.u32 	%r1, 0;
	st.local.u32 	[%rd8], %r1;
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd3;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd5;
	.param .b32 retval0;
	call.uni (retval0), 
	_odd, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b32 	%r2, [retval0+0];
	} // callseq 5
	st.param.b32 	[func_retval0+0], %r1;
	ret;

}
	// .globl	dispatch_even_async
.visible .func  (.param .b32 func_retval0) dispatch_even_async(
	.param .b64 dispatch_even_async_param_0,
	.param .b64 dispatch_even_async_param_1,
	.param .b64 dispatch_even_async_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd1, [dispatch_even_async_param_1];
	ld.param.u64 	%rd10, [dispatch_even_async_param_2];
	ld.u64 	%rd11, [%rd1];
	ld.u64 	%rd2, [%rd11+24];
	ld.u32 	%r1, [%rd2+40];
	ld.u32 	%r3, [%rd2+36];
	setp.ge.u32 	%p1, %r3, %r1;
	@%p1 bra 	$L__BB4_6;

	ld.u64 	%rd3, [%rd10];
	ld.u64 	%rd4, [%rd10+8];
	ld.u64 	%rd5, [%rd10+16];
	add.s64 	%rd12, %rd2, 36;
	atom.add.u32 	%r4, [%rd12], 1;
	setp.ge.u32 	%p2, %r4, %r1;
	setp.lt.u32 	%p3, %r4, %r1;
	selp.b32 	%r2, %r4, 0, %p3;
	@%p2 bra 	$L__BB4_6;

	ld.u64 	%rd13, [%rd1];
	ld.u64 	%rd6, [%rd13+24];
	ld.u8 	%rs1, [%rd6];
	setp.eq.s16 	%p4, %rs1, 0;
	@%p4 bra 	$L__BB4_4;

	ld.u64 	%rd16, [%rd6+8];
	bra.uni 	$L__BB4_5;

$L__BB4_4:
	ld.u64 	%rd16, [%rd6+16];

$L__BB4_5:
	mul.wide.u32 	%rd14, %r2, 40;
	add.s64 	%rd15, %rd16, %rd14;
	st.u64 	[%rd15+8], %rd3;
	st.u64 	[%rd15+16], %rd4;
	st.u64 	[%rd15+24], %rd5;

$L__BB4_6:
	mov.u32 	%r5, 0;
	st.param.b32 	[func_retval0+0], %r5;
	ret;

}
	// .globl	dispatch_even_sync
.visible .func  (.param .b32 func_retval0) dispatch_even_sync(
	.param .b64 dispatch_even_sync_param_0,
	.param .b64 dispatch_even_sync_param_1,
	.param .b64 dispatch_even_sync_param_2
)
{
	.local .align 8 .b8 	__local_depot5[80];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<18>;


	mov.u64 	%SPL, __local_depot5;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd1, [dispatch_even_sync_param_1];
	ld.param.u64 	%rd2, [dispatch_even_sync_param_2];
	add.u64 	%rd3, %SP, 0;
	add.u64 	%rd4, %SPL, 0;
	add.u64 	%rd5, %SP, 48;
	add.u64 	%rd6, %SPL, 48;
	add.u64 	%rd7, %SP, 72;
	add.u64 	%rd8, %SPL, 72;
	ld.u64 	%rd9, [%rd2];
	ld.u64 	%rd10, [%rd2+8];
	ld.u64 	%rd11, [%rd2+16];
	ld.u64 	%rd12, [%rd1];
	ld.u64 	%rd13, [%rd1+8];
	ld.u64 	%rd14, [%rd1+16];
	ld.u64 	%rd15, [%rd1+24];
	ld.u64 	%rd16, [%rd1+32];
	ld.u64 	%rd17, [%rd1+40];
	st.local.u64 	[%rd4], %rd12;
	st.local.u64 	[%rd4+8], %rd13;
	st.local.u64 	[%rd4+16], %rd14;
	st.local.u64 	[%rd4+24], %rd15;
	st.local.u64 	[%rd4+32], %rd16;
	st.local.u64 	[%rd4+40], %rd17;
	st.local.u64 	[%rd6], %rd9;
	st.local.u64 	[%rd6+8], %rd10;
	st.local.u64 	[%rd6+16], %rd11;
	mov.u32 	%r1, 0;
	st.local.u32 	[%rd8], %r1;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd3;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd5;
	.param .b32 retval0;
	call.uni (retval0), 
	_even, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b32 	%r2, [retval0+0];
	} // callseq 6
	st.param.b32 	[func_retval0+0], %r1;
	ret;

}
	// .globl	access_device
.visible .func  (.param .b32 func_retval0) access_device(
	.param .b64 access_device_param_0,
	.param .b64 access_device_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [access_device_param_0];
	ld.param.u64 	%rd2, [access_device_param_1];
	ld.u64 	%rd3, [%rd2+24];
	ld.u64 	%rd4, [%rd3];
	st.u64 	[%rd1], %rd4;
	mov.u32 	%r1, 0;
	st.param.b32 	[func_retval0+0], %r1;
	ret;

}
	// .globl	access_group
.visible .func  (.param .b32 func_retval0) access_group(
	.param .b64 access_group_param_0,
	.param .b64 access_group_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [access_group_param_0];
	ld.param.u64 	%rd2, [access_group_param_1];
	ld.u64 	%rd3, [%rd2+32];
	ld.u64 	%rd4, [%rd3];
	st.u64 	[%rd1], %rd4;
	mov.u32 	%r1, 0;
	st.param.b32 	[func_retval0+0], %r1;
	ret;

}
	// .globl	access_thread
.visible .func  (.param .b32 func_retval0) access_thread(
	.param .b64 access_thread_param_0,
	.param .b64 access_thread_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [access_thread_param_0];
	ld.param.u64 	%rd2, [access_thread_param_1];
	ld.u64 	%rd3, [%rd2+40];
	ld.u64 	%rd4, [%rd3];
	st.u64 	[%rd1], %rd4;
	mov.u32 	%r1, 0;
	st.param.b32 	[func_retval0+0], %r1;
	ret;

}
	// .globl	_ZN4util14current_leaderEv
.visible .func  (.param .b32 func_retval0) _ZN4util14current_leaderEv()
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;


	// begin inline asm
	activemask.b32 %r1;
	// end inline asm
	brev.b32 	%r2, %r1;
	bfind.shiftamt.u32 	%r3, %r2;
	mov.u32 	%r4, %tid.x;
	setp.eq.s32 	%p1, %r3, %r4;
	selp.u32 	%r5, 1, 0, %p1;
	st.param.b32 	[func_retval0+0], %r5;
	ret;

}
	// .globl	_ZN4util13warp_inc_scanEv
.visible .func  (.param .b32 func_retval0) _ZN4util13warp_inc_scanEv()
{
	.reg .b32 	%r<8>;


	// begin inline asm
	activemask.b32 %r1;
	// end inline asm
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, -1;
	shl.b32 	%r4, %r3, %r2;
	not.b32 	%r5, %r4;
	and.b32  	%r6, %r1, %r5;
	popc.b32 	%r7, %r6;
	st.param.b32 	[func_retval0+0], %r7;
	ret;

}
	// .globl	_ZN4util12active_countEv
.visible .func  (.param .b32 func_retval0) _ZN4util12active_countEv()
{
	.reg .b32 	%r<3>;


	// begin inline asm
	activemask.b32 %r1;
	// end inline asm
	popc.b32 	%r2, %r1;
	st.param.b32 	[func_retval0+0], %r2;
	ret;

}
	// .globl	_ZN4util9pop_countEj
.visible .func  (.param .b32 func_retval0) _ZN4util9pop_countEj(
	.param .b32 _ZN4util9pop_countEj_param_0
)
{
	.reg .b32 	%r<3>;


	ld.param.u32 	%r1, [_ZN4util9pop_countEj_param_0];
	popc.b32 	%r2, %r1;
	st.param.b32 	[func_retval0+0], %r2;
	ret;

}
	// .globl	_ZN4util9pop_countEy
.visible .func  (.param .b64 func_retval0) _ZN4util9pop_countEy(
	.param .b64 _ZN4util9pop_countEy_param_0
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN4util9pop_countEy_param_0];
	popc.b64 	%r1, %rd1;
	cvt.u64.u32 	%rd2, %r1;
	st.param.b64 	[func_retval0+0], %rd2;
	ret;

}
	// .globl	_ZN4util13leading_zerosEj
.visible .func  (.param .b32 func_retval0) _ZN4util13leading_zerosEj(
	.param .b32 _ZN4util13leading_zerosEj_param_0
)
{
	.reg .b32 	%r<3>;


	ld.param.u32 	%r1, [_ZN4util13leading_zerosEj_param_0];
	clz.b32 	%r2, %r1;
	st.param.b32 	[func_retval0+0], %r2;
	ret;

}
	// .globl	_ZN4util13leading_zerosEy
.visible .func  (.param .b64 func_retval0) _ZN4util13leading_zerosEy(
	.param .b64 _ZN4util13leading_zerosEy_param_0
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN4util13leading_zerosEy_param_0];
	clz.b64 	%r1, %rd1;
	cvt.u64.u32 	%rd2, %r1;
	st.param.b64 	[func_retval0+0], %rd2;
	ret;

}
	// .globl	_ZN4util11random_uintERj
.visible .func  (.param .b32 func_retval0) _ZN4util11random_uintERj(
	.param .b64 _ZN4util11random_uintERj_param_0
)
{
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN4util11random_uintERj_param_0];
	ld.u32 	%r1, [%rd1];
	mad.lo.s32 	%r2, %r1, 69069, 1;
	st.u32 	[%rd1], %r2;
	st.param.b32 	[func_retval0+0], %r2;
	ret;

}
	// .globl	_ZN4util11random_uintERy
.visible .func  (.param .b64 func_retval0) _ZN4util11random_uintERy(
	.param .b64 _ZN4util11random_uintERy_param_0
)
{
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_ZN4util11random_uintERy_param_0];
	ld.u64 	%rd2, [%rd1];
	mul.lo.s64 	%rd3, %rd2, 2971215073;
	add.s64 	%rd4, %rd3, 12345;
	st.u64 	[%rd1], %rd4;
	st.param.b64 	[func_retval0+0], %rd4;
	ret;

}

